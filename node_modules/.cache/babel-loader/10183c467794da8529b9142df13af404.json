{"ast":null,"code":"import _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/src/components/Orders/index.js\";\nimport React, { PureComponent } from 'react';\nimport { themeColors } from '../../constants';\nimport styles from './styles';\nimport { styled } from 'styletron-react';\nimport { baseUrl } from '../../constants';\n\nvar Orders =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Orders, _PureComponent);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      order: [],\n      pizzaTypes: []\n    };\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          pizzaTypes = _this$state.pizzaTypes,\n          order = _this$state.order;\n      var _this$props = this.props,\n          handlePlaceOrder = _this$props.handlePlaceOrder,\n          handleCancelOrder = _this$props.handleCancelOrder;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        Component: React.createElement(Button, {\n          color: themeColors.tertiaryColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Select Pizza Type\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, pizzaTypes.map(function (pt, i) {\n        return React.createElement(Dropdown.Item, {\n          key: i,\n          onClick: function onClick() {\n            return _this2.handleSelectPizzaType(pt);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, pt.name);\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Pizza\"), React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Price\"), React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Quantity\")), order.map(function (orderItem, i) {\n        var pizzaType = pizzaTypes.find(function (pt) {\n          return pt.id === orderItem.pizza_type_id;\n        });\n        return React.createElement(TableRow, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, pizzaType.name), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"$\", pizzaType.price), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, orderItem.quantity));\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Row, {\n        style: {\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        color: themeColors.primaryColor,\n        onClick: handleCancelOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Cancel Order\"), React.createElement(Button, {\n        $as: Link,\n        to: '/',\n        onClick: function onClick() {\n          return handlePlaceOrder(order);\n        },\n        color: themeColors.primaryColor,\n        type: 'submit',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Submit Order\")));\n    }\n  }]);\n\n  return Orders;\n}(PureComponent);\n\nexport { Orders as default };","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/src/components/Orders/index.js"],"names":["React","PureComponent","themeColors","styles","styled","baseUrl","Orders","state","order","pizzaTypes","props","handlePlaceOrder","handleCancelOrder","justifyContent","tertiaryColor","map","pt","i","handleSelectPizzaType","name","orderItem","pizzaType","find","id","pizza_type_id","price","quantity","primaryColor","Link"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;IAEqBC,M;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;;;;;6BAKC;AAAA;;AAAA,wBACuB,KAAKF,KAD5B;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaD,KADb,eACaA,KADb;AAAA,wBAEyC,KAAKE,KAF9C;AAAA,UAECC,gBAFD,eAECA,gBAFD;AAAA,UAEmBC,iBAFnB,eAEmBA,iBAFnB;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EACP,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEX,WAAW,CAACY,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGL,UAAU,CAACM,GAAX,CAAe,UAACC,EAAD,EAAKC,CAAL,EAAW;AACzB,eACE,oBAAC,QAAD,CAAU,IAAV;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,qBAAL,CAA2BF,EAA3B,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGA,EAAE,CAACG,IAJN,CADF;AAQD,OATA,CAPH,CADF,CADF,CADF,EAuBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,EAOGX,KAAK,CAACO,GAAN,CAAU,UAACK,SAAD,EAAYH,CAAZ,EAAkB;AAC3B,YAAMI,SAAS,GAAGZ,UAAU,CAACa,IAAX,CAChB,UAAAN,EAAE;AAAA,iBAAIA,EAAE,CAACO,EAAH,KAAUH,SAAS,CAACI,aAAxB;AAAA,SADc,CAAlB;AAGA,eACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEP,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYI,SAAS,CAACF,IAAtB,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaE,SAAS,CAACI,KAAvB,CAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYL,SAAS,CAACM,QAAtB,CAHF,CADF;AAOD,OAXA,CAPH,CADF,CAvBF,EA6CE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEb,UAAAA,cAAc,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA7CF,EAgDE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,cAAc,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,IADX;AAEE,QAAA,KAAK,EAAEX,WAAW,CAACyB,YAFrB;AAGE,QAAA,OAAO,EAAEf,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EASE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEgB,IADP;AAEE,QAAA,EAAE,EAAE,GAFN;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMjB,gBAAgB,CAACH,KAAD,CAAtB;AAAA,SAHX;AAIE,QAAA,KAAK,EAAEN,WAAW,CAACyB,YAJrB;AAKE,QAAA,IAAI,EAAE,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CAhDF,CADF;AAsED;;;;EA/EiC1B,a;;SAAfK,M","sourcesContent":["import React, { PureComponent } from 'react'\nimport { themeColors } from '../../constants'\nimport styles from './styles'\nimport { styled } from 'styletron-react'\n\nimport { baseUrl } from '../../constants'\n\nexport default class Orders extends PureComponent {\n  state = {\n    order: [],\n    pizzaTypes: []\n  }\n\n  render() {\n    const { pizzaTypes, order } = this.state\n    const { handlePlaceOrder, handleCancelOrder } = this.props\n    return (\n      <Form>\n        <Row style={{ justifyContent: 'center' }}>\n          <Field>\n            <Dropdown\n              Component={\n                <Button color={themeColors.tertiaryColor}>\n                  Select Pizza Type\n                </Button>\n              }\n            >\n              {pizzaTypes.map((pt, i) => {\n                return (\n                  <Dropdown.Item\n                    key={i}\n                    onClick={() => this.handleSelectPizzaType(pt)}\n                  >\n                    {pt.name}\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown>\n          </Field>\n        </Row>\n        <Row>\n          <Table>\n            <TableRow>\n              <TableHeader>Pizza</TableHeader>\n              <TableHeader>Price</TableHeader>\n              <TableHeader>Quantity</TableHeader>\n            </TableRow>\n\n            {order.map((orderItem, i) => {\n              const pizzaType = pizzaTypes.find(\n                pt => pt.id === orderItem.pizza_type_id\n              )\n              return (\n                <TableRow key={i}>\n                  <TableCell>{pizzaType.name}</TableCell>\n                  <TableCell>${pizzaType.price}</TableCell>\n                  <TableCell>{orderItem.quantity}</TableCell>\n                </TableRow>\n              )\n            })}\n          </Table>\n        </Row>\n        <Row style={{ justifyContent: 'center' }}>\n          <Field />\n        </Row>\n        <Row style={{ justifyContent: 'space-between' }}>\n          <Button\n            outline={true}\n            color={themeColors.primaryColor}\n            onClick={handleCancelOrder}\n          >\n            Cancel Order\n          </Button>\n\n          <Button\n            $as={Link}\n            to={'/'}\n            onClick={() => handlePlaceOrder(order)}\n            color={themeColors.primaryColor}\n            type={'submit'}\n          >\n            Submit Order\n          </Button>\n        </Row>\n      </Form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/src/components/OrderForm/index.js\";\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { themeColors, textColors } from '../../constants';\nimport styles from './styles';\nimport { styled } from 'styletron-react';\nimport Button from '../Button';\nimport Dropdown from '../Dropdown';\nimport NewAddressForm from '../NewAddressForm';\nimport { baseUrl } from '../../constants';\nvar Form = styled('form', styles.form);\nvar Table = styled('div', styles.table);\nvar TableHeader = styled('div', styles.tableHeader);\nvar TableRow = styled('div', styles.tableRow);\nvar TableCell = styled('div', styles.tableCell);\nvar Field = styled('label', styles.field);\nvar Row = styled('div', styles.row);\n\nvar OrderForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(OrderForm, _PureComponent);\n\n  function OrderForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OrderForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OrderForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      order: [],\n      showCreateAddress: false,\n      newAddress: '',\n      orderAddress: '',\n      pizzaTypes: [],\n      user: {\n        addresses: []\n      }\n    };\n\n    _this.handleSelectPizzaType = function (pizzaType) {\n      var order = _this.state.order;\n      var newItem = {\n        pizza_type_id: pizzaType.id,\n        quantity: 1\n      };\n      var updatedOrder = [].concat(_toConsumableArray(order), [newItem]);\n\n      _this.setState({\n        order: updatedOrder\n      });\n    };\n\n    _this.handleSelectAddress = function (address) {\n      _this.setState({\n        orderAddress: address\n      });\n    };\n\n    _this.handleVerifyAddress = function () {\n      var newAddress = _this.state.newAddress;\n      var data = {\n        address: {\n          location: newAddress\n        }\n      };\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch(baseUrl + '/addresses', {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (addressResponse) {\n          console.log('TCL: OrderForm -> handleVerifyAddress -> addressResponse', addressResponse);\n\n          if (addressResponse.errors) {\n            _this.setState({\n              newAddress: ''\n            });\n\n            alert(addressResponse.errors);\n            return;\n          } else {\n            _this.setState({\n              showCreateAddress: false,\n              orderAddress: addressResponse\n            });\n          }\n        });\n      }\n    };\n\n    _this.handleChangeAddress = function () {\n      _this.setState({\n        showCreateAddress: true,\n        orderAddress: ''\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var address = e.target.value;\n\n      _this.setState({\n        newAddress: address\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OrderForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch(baseUrl + '/pizza_types', {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (pizzaTypes) {\n          console.log(pizzaTypes);\n\n          _this2.setState({\n            pizzaTypes: pizzaTypes\n          });\n        });\n        fetch(baseUrl + '/user', {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (user) {\n          console.log('TCL: OrderForm -> componentDidMount -> user', user);\n\n          _this2.setState({\n            user: user\n          });\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          pizzaTypes = _this$state.pizzaTypes,\n          order = _this$state.order,\n          orderAddress = _this$state.orderAddress,\n          user = _this$state.user,\n          showCreateAddress = _this$state.showCreateAddress,\n          newAddress = _this$state.newAddress;\n      var _this$props = this.props,\n          handlePlaceOrder = _this$props.handlePlaceOrder,\n          handleCancelOrder = _this$props.handleCancelOrder;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        Component: React.createElement(Button, {\n          color: themeColors.tertiaryColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Select Pizza Type\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, pizzaTypes.map(function (pt, i) {\n        return React.createElement(Dropdown.Item, {\n          key: i,\n          onClick: function onClick() {\n            return _this3.handleSelectPizzaType(pt);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '170px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, pt.name), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"$\", pt.price)));\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Pizza\"), React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Price\"), React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Quantity\")), order.map(function (orderItem, i) {\n        var pizzaType = pizzaTypes.find(function (pt) {\n          return pt.id === orderItem.pizza_type_id;\n        });\n        return React.createElement(TableRow, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, pizzaType.name), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"$\", pizzaType.price), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, orderItem.quantity));\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, orderAddress ? React.createElement(\"div\", {\n        style: {\n          border: \"1px solid \".concat(themeColors.primaryColor),\n          padding: '1rem',\n          color: textColors.textMuted,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, orderAddress.location)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Latitude: \", orderAddress.latitude, \", Longitude:\", ' ', orderAddress.longitude)) : null, showCreateAddress ? React.createElement(NewAddressForm, {\n        handleVerifyAddress: this.handleVerifyAddress,\n        handleChange: this.handleChange,\n        newAddress: newAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }) : null), React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        Component: React.createElement(Button, {\n          handleChange: this.handleAddressChange,\n          color: themeColors.secondaryColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Select Address\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, user.addresses.map(function (address, i) {\n        return React.createElement(Dropdown.Item, {\n          key: i,\n          onClick: function onClick() {\n            return _this3.handleSelectAddress(address);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, address.location);\n      }), React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleChangeAddress,\n        color: themeColors.primaryColor,\n        size: 'sm',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Create New Address\")))), React.createElement(Row, {\n        style: {\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        color: themeColors.primaryColor,\n        onClick: handleCancelOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Cancel Order\"), React.createElement(Button, {\n        $as: Link,\n        to: '/',\n        onClick: function onClick() {\n          return handlePlaceOrder(order, orderAddress);\n        },\n        color: themeColors.primaryColor,\n        type: 'submit',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Submit Order\")));\n    }\n  }]);\n\n  return OrderForm;\n}(PureComponent);\n\nexport { OrderForm as default };","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/src/components/OrderForm/index.js"],"names":["React","PureComponent","Link","themeColors","textColors","styles","styled","Button","Dropdown","NewAddressForm","baseUrl","Form","form","Table","table","TableHeader","tableHeader","TableRow","tableRow","TableCell","tableCell","Field","field","Row","row","OrderForm","state","order","showCreateAddress","newAddress","orderAddress","pizzaTypes","user","addresses","handleSelectPizzaType","pizzaType","newItem","pizza_type_id","id","quantity","updatedOrder","setState","handleSelectAddress","address","handleVerifyAddress","data","location","token","localStorage","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","res","json","addressResponse","console","log","errors","alert","handleChangeAddress","handleChange","e","target","value","catch","error","props","handlePlaceOrder","handleCancelOrder","justifyContent","tertiaryColor","map","pt","i","display","width","name","price","orderItem","find","border","primaryColor","padding","color","textMuted","textAlign","marginBottom","latitude","longitude","handleAddressChange","secondaryColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport { themeColors, textColors } from '../../constants'\nimport styles from './styles'\nimport { styled } from 'styletron-react'\nimport Button from '../Button'\nimport Dropdown from '../Dropdown'\nimport NewAddressForm from '../NewAddressForm'\nimport { baseUrl } from '../../constants'\n\nconst Form = styled('form', styles.form)\nconst Table = styled('div', styles.table)\nconst TableHeader = styled('div', styles.tableHeader)\nconst TableRow = styled('div', styles.tableRow)\nconst TableCell = styled('div', styles.tableCell)\nconst Field = styled('label', styles.field)\nconst Row = styled('div', styles.row)\n\nexport default class OrderForm extends PureComponent {\n  state = {\n    order: [],\n    showCreateAddress: false,\n    newAddress: '',\n    orderAddress: '',\n    pizzaTypes: [],\n    user: { addresses: [] }\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token')\n    if (token) {\n      fetch(baseUrl + '/pizza_types', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(pizzaTypes => {\n          console.log(pizzaTypes)\n          this.setState({ pizzaTypes })\n        })\n      fetch(baseUrl + '/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(user => {\n          console.log('TCL: OrderForm -> componentDidMount -> user', user)\n          this.setState({ user })\n        })\n        .catch(e => console.error(e))\n    }\n  }\n\n  handleSelectPizzaType = pizzaType => {\n    const { order } = this.state\n    const newItem = {\n      pizza_type_id: pizzaType.id,\n      quantity: 1\n    }\n\n    const updatedOrder = [...order, newItem]\n    this.setState({\n      order: updatedOrder\n    })\n  }\n\n  handleSelectAddress = address => {\n    this.setState({ orderAddress: address })\n  }\n\n  handleVerifyAddress = () => {\n    const { newAddress } = this.state\n    const data = { address: { location: newAddress } }\n    let token = localStorage.getItem('token')\n    if (token) {\n      fetch(baseUrl + '/addresses', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(addressResponse => {\n          console.log(\n            'TCL: OrderForm -> handleVerifyAddress -> addressResponse',\n            addressResponse\n          )\n          if (addressResponse.errors) {\n            this.setState({ newAddress: '' })\n            alert(addressResponse.errors)\n            return\n          } else {\n            this.setState({\n              showCreateAddress: false,\n              orderAddress: addressResponse\n            })\n          }\n        })\n    }\n  }\n  handleChangeAddress = () => {\n    this.setState({\n      showCreateAddress: true,\n      orderAddress: ''\n    })\n  }\n\n  handleChange = e => {\n    const address = e.target.value\n    this.setState({ newAddress: address })\n  }\n  render() {\n    const {\n      pizzaTypes,\n      order,\n      orderAddress,\n      user,\n      showCreateAddress,\n      newAddress\n    } = this.state\n    const { handlePlaceOrder, handleCancelOrder } = this.props\n    return (\n      <Form>\n        <Row style={{ justifyContent: 'center' }}>\n          <Field>\n            <Dropdown\n              Component={\n                <Button color={themeColors.tertiaryColor}>\n                  Select Pizza Type\n                </Button>\n              }\n            >\n              {pizzaTypes.map((pt, i) => {\n                return (\n                  <Dropdown.Item\n                    key={i}\n                    onClick={() => this.handleSelectPizzaType(pt)}\n                  >\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        width: '170px'\n                      }}\n                    >\n                      <span>{pt.name}</span>\n                      <span>${pt.price}</span>\n                    </div>\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown>\n          </Field>\n        </Row>\n        <Row>\n          <Table>\n            <TableRow>\n              <TableHeader>Pizza</TableHeader>\n              <TableHeader>Price</TableHeader>\n              <TableHeader>Quantity</TableHeader>\n            </TableRow>\n\n            {order.map((orderItem, i) => {\n              const pizzaType = pizzaTypes.find(\n                pt => pt.id === orderItem.pizza_type_id\n              )\n              return (\n                <TableRow key={i}>\n                  <TableCell>{pizzaType.name}</TableCell>\n                  <TableCell>${pizzaType.price}</TableCell>\n                  <TableCell>{orderItem.quantity}</TableCell>\n                </TableRow>\n              )\n            })}\n          </Table>\n        </Row>\n        <Row style={{ justifyContent: 'center' }}>\n          {orderAddress ? (\n            <div\n              style={{\n                border: `1px solid ${themeColors.primaryColor}`,\n                padding: '1rem',\n                color: textColors.textMuted,\n                textAlign: 'center'\n              }}\n            >\n              <div style={{ marginBottom: '1rem' }}>\n                <strong>{orderAddress.location}</strong>\n              </div>\n              <div>\n                Latitude: {orderAddress.latitude}, Longitude:{' '}\n                {orderAddress.longitude}\n              </div>\n            </div>\n          ) : null}\n          {showCreateAddress ? (\n            <NewAddressForm\n              handleVerifyAddress={this.handleVerifyAddress}\n              handleChange={this.handleChange}\n              newAddress={newAddress}\n            />\n          ) : null}\n        </Row>\n        <Row style={{ justifyContent: 'center' }}>\n          <Dropdown\n            Component={\n              <Button\n                handleChange={this.handleAddressChange}\n                color={themeColors.secondaryColor}\n              >\n                Select Address\n              </Button>\n            }\n          >\n            {user.addresses.map((address, i) => {\n              return (\n                <Dropdown.Item\n                  key={i}\n                  onClick={() => this.handleSelectAddress(address)}\n                >\n                  {address.location}\n                </Dropdown.Item>\n              )\n            })}\n            <Dropdown.Item>\n              <Button\n                onClick={this.handleChangeAddress}\n                color={themeColors.primaryColor}\n                size={'sm'}\n              >\n                Create New Address\n              </Button>\n            </Dropdown.Item>\n          </Dropdown>\n        </Row>\n        <Row\n          style={{\n            justifyContent: 'space-between'\n          }}\n        >\n          <Button\n            outline={true}\n            color={themeColors.primaryColor}\n            onClick={handleCancelOrder}\n          >\n            Cancel Order\n          </Button>\n\n          <Button\n            $as={Link}\n            to={'/'}\n            onClick={() => handlePlaceOrder(order, orderAddress)}\n            color={themeColors.primaryColor}\n            type={'submit'}\n          >\n            Submit Order\n          </Button>\n        </Row>\n      </Form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/src/components/Images.js\";\nimport React, { PureComponent } from 'react';\nimport { baseUrl } from '../constants';\n\nvar Images =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Images, _PureComponent);\n\n  function Images() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Images);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Images)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.fetchImages = function () {\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch(baseUrl + '/images', {\n          method: 'Get',\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          console.log('TCL: App -> data', data);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Images, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchImages();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Images;\n}(PureComponent);\n\nexport { Images as default };","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/src/components/Images.js"],"names":["React","PureComponent","baseUrl","Images","fetchImages","token","localStorage","getItem","fetch","method","headers","Accept","Authorization","then","res","json","data","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,cAAxB;;IAEqBC,M;;;;;;;;;;;;;;;;;;UAInBC,W,GAAc,YAAM;AAClB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,UAAIF,KAAJ,EAAW;AACTG,QAAAA,KAAK,CAACN,OAAO,GAAG,SAAX,EAAsB;AACzBO,UAAAA,MAAM,EAAE,KADiB;AAEzBC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,MAAM,EAAE,kBAFD;AAGPC,YAAAA,aAAa,mBAAYP,KAAZ;AAHN;AAFgB,SAAtB,CAAL,CAQGQ,IARH,CAQQ,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SARX,EASGF,IATH,CASQ,UAAAG,IAAI,EAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACD,SAXH;AAYD;AACF,K;;;;;;;wCAnBmB;AAClB,WAAKZ,WAAL;AACD;;;6BAkBQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAvBiCH,a;;SAAfE,M","sourcesContent":["import React, { PureComponent } from 'react'\nimport { baseUrl } from '../constants'\n\nexport default class Images extends PureComponent {\n  componentDidMount() {\n    this.fetchImages()\n  }\n  fetchImages = () => {\n    let token = localStorage.getItem('token')\n    if (token) {\n      fetch(baseUrl + '/images', {\n        method: 'Get',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log('TCL: App -> data', data)\n        })\n    }\n  }\n  render() {\n    return <div />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/src/containers/Main.js\";\nimport React, { PureComponent } from 'react';\nimport { baseUrl } from '../constants';\nimport UploadForm from '../components/UploadForm';\nimport { Images } from '../components/Images';\n\nvar Main =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Main, _PureComponent);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      file: null\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var file = _this.state.file;\n      console.log('TCL: Main -> file', file);\n      var params = {\n        title: e.currentTarget.title.value,\n        attribution: e.currentTarget.attribution.value,\n        notes: e.currentTarget.notes.value,\n        live: e.currentTarget.live.value,\n        url: file\n      };\n\n      _this.handlePostImage(params);\n    };\n\n    _this.handlePostImage = function (params) {\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch(baseUrl + '/images', {\n          method: 'POST',\n          body: JSON.stringify(params),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          console.log('TCL: App -> data', data);\n        });\n      }\n    };\n\n    _this.handleChange = function (e) {\n      if (e.target.files.length > 0) {\n        var reader = new FileReader();\n        var file = e.target.files[0];\n        console.log('TCL: Main -> file', file);\n\n        reader.onloadend = function () {\n          _this.setState({\n            file: reader.result\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(UploadForm, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Images, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(PureComponent);\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/APIPractice/APIFrontend/api-frontend/src/containers/Main.js"],"names":["React","PureComponent","baseUrl","UploadForm","Images","Main","state","file","handleSubmit","e","preventDefault","console","log","params","title","currentTarget","value","attribution","notes","live","url","handlePostImage","token","localStorage","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","res","json","data","handleChange","target","files","length","reader","FileReader","onloadend","setState","result","readAsDataURL"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;IACqBC,I;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAR,K;;UAERC,Y,GAAe,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AADkB,UAEVH,IAFU,GAED,MAAKD,KAFJ,CAEVC,IAFU;AAGlBI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,IAAjC;AAEA,UAAMM,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEL,CAAC,CAACM,aAAF,CAAgBD,KAAhB,CAAsBE,KADhB;AAEbC,QAAAA,WAAW,EAAER,CAAC,CAACM,aAAF,CAAgBE,WAAhB,CAA4BD,KAF5B;AAGbE,QAAAA,KAAK,EAAET,CAAC,CAACM,aAAF,CAAgBG,KAAhB,CAAsBF,KAHhB;AAIbG,QAAAA,IAAI,EAAEV,CAAC,CAACM,aAAF,CAAgBI,IAAhB,CAAqBH,KAJd;AAKbI,QAAAA,GAAG,EAAEb;AALQ,OAAf;;AAOA,YAAKc,eAAL,CAAqBR,MAArB;AACD,K;;UAEDQ,e,GAAkB,UAAAR,MAAM,EAAI;AAC1B,UAAIS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,UAAIF,KAAJ,EAAW;AACTG,QAAAA,KAAK,CAACvB,OAAO,GAAG,SAAX,EAAsB;AACzBwB,UAAAA,MAAM,EAAE,MADiB;AAEzBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,MAAf,CAFmB;AAGzBiB,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,aAAa,mBAAYT,KAAZ;AAFN;AAHgB,SAAtB,CAAL,CAQGU,IARH,CAQQ,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SARX,EASGF,IATH,CASQ,UAAAG,IAAI,EAAI;AACZxB,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCuB,IAAhC;AACD,SAXH;AAYD;AACF,K;;UAEDC,Y,GAAe,UAAA3B,CAAC,EAAI;AAClB,UAAIA,CAAC,CAAC4B,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEA,YAAMlC,IAAI,GAAGE,CAAC,CAAC4B,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA3B,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,IAAjC;;AAEAiC,QAAAA,MAAM,CAACE,SAAP,GAAmB,YAAM;AACvB,gBAAKC,QAAL,CAAc;AAAEpC,YAAAA,IAAI,EAAEiC,MAAM,CAACI;AAAf,WAAd;AACD,SAFD;;AAIAJ,QAAAA,MAAM,CAACK,aAAP,CAAqBtC,IAArB;AACD;AACF,K;;;;;;;6BAEQ;AACP,aACE,0CACE,oBAAC,UAAD;AACE,QAAA,YAAY,EAAE,KAAKC,YADrB;AAEE,QAAA,YAAY,EAAE,KAAK4B,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA7D+BnC,a;;SAAbI,I","sourcesContent":["import React, { PureComponent } from 'react'\nimport { baseUrl } from '../constants'\nimport UploadForm from '../components/UploadForm'\nimport { Images } from '../components/Images'\nexport default class Main extends PureComponent {\n  state = { file: null }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { file } = this.state\n    console.log('TCL: Main -> file', file)\n\n    const params = {\n      title: e.currentTarget.title.value,\n      attribution: e.currentTarget.attribution.value,\n      notes: e.currentTarget.notes.value,\n      live: e.currentTarget.live.value,\n      url: file\n    }\n    this.handlePostImage(params)\n  }\n\n  handlePostImage = params => {\n    let token = localStorage.getItem('token')\n    if (token) {\n      fetch(baseUrl + '/images', {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log('TCL: App -> data', data)\n        })\n    }\n  }\n\n  handleChange = e => {\n    if (e.target.files.length > 0) {\n      const reader = new FileReader()\n\n      const file = e.target.files[0]\n      console.log('TCL: Main -> file', file)\n\n      reader.onloadend = () => {\n        this.setState({ file: reader.result })\n      }\n\n      reader.readAsDataURL(file)\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <UploadForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n        <Images />\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { textColors } from '../../../constants';\nimport { lighten, darken } from '../../utils/color';\nimport { transitions } from '../../../constants';\nvar styles = {\n  button: function button(_ref) {\n    var $color = _ref.$color,\n        $outline = _ref.$outline,\n        $disabled = _ref.$disabled,\n        $fetching = _ref.$fetching;\n    var color = $outline && !$fetching ? textColors.textSecondary : $outline && $fetching ? $color : '#fff';\n    var backgroundColor = $outline ? '#fff' : $color;\n    var borderColor = $outline && !$fetching ? textColors.textSecondary : $outline && $fetching ? $color : $color;\n    var pseudoStyles = !$disabled && !$fetching ? {\n      ':hover': {\n        color: $outline ? lighten($color, 0.3) : '#fff',\n        fill: $outline ? lighten($color, 0.3) : '#fff',\n        backgroundColor: $outline ? '#fff' : lighten($color, 0.1),\n        borderColor: lighten($color, 0.1)\n      },\n      ':focus': {\n        color: $outline ? darken($color, 0.3) : '#fff',\n        fill: $outline ? darken($color, 0.3) : '#fff',\n        backgroundColor: $outline ? '#fff' : darken($color, 0.1),\n        borderColor: darken($color, 0.1)\n      },\n      ':active': {\n        color: $outline ? darken($color, 0.3) : '#fff',\n        fill: $outline ? darken($color, 0.3) : '#fff',\n        backgroundColor: $outline ? '#fff' : darken($color, 0.1),\n        borderColor: darken($color, 0.1)\n      }\n    } : {};\n    return _objectSpread({\n      color: color,\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      fill: color,\n      transition: \"all \".concat(transitions.standardTiming, \" \").concat(transitions.standardCubic)\n    }, pseudoStyles);\n  },\n  buttonContent: function buttonContent(_ref2) {\n    var $fetching = _ref2.$fetching;\n    return {\n      visibility: $fetching ? 'hidden' : 'visible'\n    };\n  },\n  buttonIcon: function buttonIcon() {\n    return {};\n  }\n};\nexport default styles;","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/src/components/Button/Button/styles.js"],"names":["textColors","lighten","darken","transitions","styles","button","$color","$outline","$disabled","$fetching","color","textSecondary","backgroundColor","borderColor","pseudoStyles","fill","transition","standardTiming","standardCubic","buttonContent","visibility","buttonIcon"],"mappings":";AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,sBAAgD;AAAA,QAA7CC,MAA6C,QAA7CA,MAA6C;AAAA,QAArCC,QAAqC,QAArCA,QAAqC;AAAA,QAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;AACtD,QAAMC,KAAK,GACTH,QAAQ,IAAI,CAACE,SAAb,GACIT,UAAU,CAACW,aADf,GAEIJ,QAAQ,IAAIE,SAAZ,GACAH,MADA,GAEA,MALN;AAMA,QAAMM,eAAe,GAAGL,QAAQ,GAAG,MAAH,GAAYD,MAA5C;AACA,QAAMO,WAAW,GACfN,QAAQ,IAAI,CAACE,SAAb,GACIT,UAAU,CAACW,aADf,GAEIJ,QAAQ,IAAIE,SAAZ,GACAH,MADA,GAEAA,MALN;AAOA,QAAMQ,YAAY,GAChB,CAACN,SAAD,IAAc,CAACC,SAAf,GACI;AACE,gBAAU;AACRC,QAAAA,KAAK,EAAEH,QAAQ,GAAGN,OAAO,CAACK,MAAD,EAAS,GAAT,CAAV,GAA0B,MADjC;AAERS,QAAAA,IAAI,EAAER,QAAQ,GAAGN,OAAO,CAACK,MAAD,EAAS,GAAT,CAAV,GAA0B,MAFhC;AAGRM,QAAAA,eAAe,EAAEL,QAAQ,GAAG,MAAH,GAAYN,OAAO,CAACK,MAAD,EAAS,GAAT,CAHpC;AAIRO,QAAAA,WAAW,EAAEZ,OAAO,CAACK,MAAD,EAAS,GAAT;AAJZ,OADZ;AAOE,gBAAU;AACRI,QAAAA,KAAK,EAAEH,QAAQ,GAAGL,MAAM,CAACI,MAAD,EAAS,GAAT,CAAT,GAAyB,MADhC;AAERS,QAAAA,IAAI,EAAER,QAAQ,GAAGL,MAAM,CAACI,MAAD,EAAS,GAAT,CAAT,GAAyB,MAF/B;AAGRM,QAAAA,eAAe,EAAEL,QAAQ,GAAG,MAAH,GAAYL,MAAM,CAACI,MAAD,EAAS,GAAT,CAHnC;AAIRO,QAAAA,WAAW,EAAEX,MAAM,CAACI,MAAD,EAAS,GAAT;AAJX,OAPZ;AAaE,iBAAW;AACTI,QAAAA,KAAK,EAAEH,QAAQ,GAAGL,MAAM,CAACI,MAAD,EAAS,GAAT,CAAT,GAAyB,MAD/B;AAETS,QAAAA,IAAI,EAAER,QAAQ,GAAGL,MAAM,CAACI,MAAD,EAAS,GAAT,CAAT,GAAyB,MAF9B;AAGTM,QAAAA,eAAe,EAAEL,QAAQ,GAAG,MAAH,GAAYL,MAAM,CAACI,MAAD,EAAS,GAAT,CAHlC;AAITO,QAAAA,WAAW,EAAEX,MAAM,CAACI,MAAD,EAAS,GAAT;AAJV;AAbb,KADJ,GAqBI,EAtBN;AAwBA;AACEI,MAAAA,KAAK,EAALA,KADF;AAEEE,MAAAA,eAAe,EAAfA,eAFF;AAGEC,MAAAA,WAAW,EAAXA,WAHF;AAIEE,MAAAA,IAAI,EAAEL,KAJR;AAKEM,MAAAA,UAAU,gBAASb,WAAW,CAACc,cAArB,cACRd,WAAW,CAACe,aADJ;AALZ,OAQKJ,YARL;AAUD,GAlDY;AAoDbK,EAAAA,aAAa,EAAE,8BAAmB;AAAA,QAAhBV,SAAgB,SAAhBA,SAAgB;AAChC,WAAO;AACLW,MAAAA,UAAU,EAAEX,SAAS,GAAG,QAAH,GAAc;AAD9B,KAAP;AAGD,GAxDY;AA0DbY,EAAAA,UAAU,EAAE,sBAAM;AAChB,WAAO,EAAP;AACD;AA5DY,CAAf;AA+DA,eAAejB,MAAf","sourcesContent":["import { textColors } from '../../../constants'\nimport { lighten, darken } from '../../utils/color'\nimport { transitions } from '../../../constants'\n\nconst styles = {\n  button: ({ $color, $outline, $disabled, $fetching }) => {\n    const color =\n      $outline && !$fetching\n        ? textColors.textSecondary\n        : $outline && $fetching\n        ? $color\n        : '#fff'\n    const backgroundColor = $outline ? '#fff' : $color\n    const borderColor =\n      $outline && !$fetching\n        ? textColors.textSecondary\n        : $outline && $fetching\n        ? $color\n        : $color\n\n    const pseudoStyles =\n      !$disabled && !$fetching\n        ? {\n            ':hover': {\n              color: $outline ? lighten($color, 0.3) : '#fff',\n              fill: $outline ? lighten($color, 0.3) : '#fff',\n              backgroundColor: $outline ? '#fff' : lighten($color, 0.1),\n              borderColor: lighten($color, 0.1)\n            },\n            ':focus': {\n              color: $outline ? darken($color, 0.3) : '#fff',\n              fill: $outline ? darken($color, 0.3) : '#fff',\n              backgroundColor: $outline ? '#fff' : darken($color, 0.1),\n              borderColor: darken($color, 0.1)\n            },\n            ':active': {\n              color: $outline ? darken($color, 0.3) : '#fff',\n              fill: $outline ? darken($color, 0.3) : '#fff',\n              backgroundColor: $outline ? '#fff' : darken($color, 0.1),\n              borderColor: darken($color, 0.1)\n            }\n          }\n        : {}\n\n    return {\n      color,\n      backgroundColor,\n      borderColor,\n      fill: color,\n      transition: `all ${transitions.standardTiming} ${\n        transitions.standardCubic\n      }`,\n      ...pseudoStyles\n    }\n  },\n\n  buttonContent: ({ $fetching }) => {\n    return {\n      visibility: $fetching ? 'hidden' : 'visible'\n    }\n  },\n\n  buttonIcon: () => {\n    return {}\n  }\n}\n\nexport default styles\n"]},"metadata":{},"sourceType":"module"}
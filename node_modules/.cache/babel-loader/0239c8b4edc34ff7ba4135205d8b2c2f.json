{"ast":null,"code":"import _objectWithoutProperties from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/src/components/Button/Button/index.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseButton, BaseButtonContent, BaseButtonText, BaseButtonIcon } from '../Base';\nimport Spinner from 'components/Spinner';\nimport { getIcon } from 'components/Icon';\nimport { withStyle } from 'styletron-react';\nimport styles from './styles';\nvar Button = withStyle(BaseButton, styles.button);\nvar ButtonContent = withStyle(BaseButtonContent, styles.buttonContent);\nvar ButtonText = withStyle(BaseButtonText, styles.buttonText);\nvar ButtonIcon = withStyle(BaseButtonIcon, styles.buttonIcon);\n\nvar MeeterButton =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MeeterButton, _PureComponent);\n\n  function MeeterButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MeeterButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MeeterButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          fetching = _this$props.fetching,\n          onClick = _this$props.onClick;\n\n      if (!disabled && !fetching) {\n        return onClick && onClick(e);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MeeterButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onClick = _this$props2.onClick,\n          size = _this$props2.size,\n          color = _this$props2.color,\n          outline = _this$props2.outline,\n          rounded = _this$props2.rounded,\n          block = _this$props2.block,\n          disabled = _this$props2.disabled,\n          fetching = _this$props2.fetching,\n          icon = _this$props2.icon,\n          rest = _objectWithoutProperties(_this$props2, [\"onClick\", \"size\", \"color\", \"outline\", \"rounded\", \"block\", \"disabled\", \"fetching\", \"icon\"]);\n\n      var Icon = icon ? getIcon(icon) : null;\n      return React.createElement(Button, Object.assign({\n        onClick: this.handleClick,\n        $size: size,\n        $color: color,\n        $outline: outline,\n        $rounded: rounded,\n        $block: block,\n        $disabled: disabled || fetching,\n        $fetching: fetching\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), fetching ? React.createElement(Spinner, {\n        color: outline ? color : 'white',\n        size: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : null, React.createElement(ButtonContent, {\n        $fetching: fetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, Icon ? React.createElement(ButtonIcon, {\n        $as: Icon,\n        $size: size,\n        $show: !fetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }) : null, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.props.children)));\n    }\n  }]);\n\n  return MeeterButton;\n}(PureComponent);\n\nMeeterButton.propTypes = {\n  size: PropTypes.string,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  fetching: PropTypes.bool\n};\nMeeterButton.defaultProps = {\n  /** xs, sm, lg */\n  size: 'md',\n  color: 'textPrimary',\n  disabled: false,\n  block: false,\n  fetching: false\n};\nexport default MeeterButton;","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/src/components/Button/Button/index.js"],"names":["React","PureComponent","PropTypes","BaseButton","BaseButtonContent","BaseButtonText","BaseButtonIcon","Spinner","getIcon","withStyle","styles","Button","button","ButtonContent","buttonContent","ButtonText","buttonText","ButtonIcon","buttonIcon","MeeterButton","handleClick","e","props","disabled","fetching","onClick","size","color","outline","rounded","block","icon","rest","Icon","children","propTypes","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  BaseButton,\n  BaseButtonContent,\n  BaseButtonText,\n  BaseButtonIcon\n} from '../Base'\nimport Spinner from 'components/Spinner'\nimport { getIcon } from 'components/Icon'\n\nimport { withStyle } from 'styletron-react'\nimport styles from './styles'\n\nconst Button = withStyle(BaseButton, styles.button)\nconst ButtonContent = withStyle(BaseButtonContent, styles.buttonContent)\nconst ButtonText = withStyle(BaseButtonText, styles.buttonText)\nconst ButtonIcon = withStyle(BaseButtonIcon, styles.buttonIcon)\n\nclass MeeterButton extends PureComponent {\n  static propTypes = {\n    size: PropTypes.string,\n    color: PropTypes.string,\n    disabled: PropTypes.bool,\n    block: PropTypes.bool,\n    fetching: PropTypes.bool\n  }\n\n  static defaultProps = {\n    /** xs, sm, lg */\n    size: 'md',\n    color: 'textPrimary',\n    disabled: false,\n    block: false,\n    fetching: false\n  }\n\n  handleClick = e => {\n    const { disabled, fetching, onClick } = this.props\n    if (!disabled && !fetching) {\n      return onClick && onClick(e)\n    }\n  }\n\n  render() {\n    const {\n      onClick,\n      size,\n      color,\n      outline,\n      rounded,\n      block,\n      disabled,\n      fetching,\n      icon,\n      ...rest\n    } = this.props\n\n    const Icon = icon ? getIcon(icon) : null\n\n    return (\n      <Button\n        onClick={this.handleClick}\n        $size={size}\n        $color={color}\n        $outline={outline}\n        $rounded={rounded}\n        $block={block}\n        $disabled={disabled || fetching}\n        $fetching={fetching}\n        {...rest}\n      >\n        {fetching ? (\n          <Spinner color={outline ? color : 'white'} size={size} />\n        ) : null}\n        <ButtonContent $fetching={fetching}>\n          {Icon ? (\n            <ButtonIcon $as={Icon} $size={size} $show={!fetching} />\n          ) : null}\n          <ButtonText>{this.props.children}</ButtonText>\n        </ButtonContent>\n      </Button>\n    )\n  }\n}\n\nexport default MeeterButton\n"]},"metadata":{},"sourceType":"module"}
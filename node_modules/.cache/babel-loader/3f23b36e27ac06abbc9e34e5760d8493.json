{"ast":null,"code":"import _toConsumableArray from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/src/components/OrderForm/index.js\";\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { themeColors, textColors } from '../../constants';\nimport styles from './styles';\nimport { styled } from 'styletron-react';\nimport Button from '../Button';\nimport Dropdown from '../Dropdown';\nimport { baseUrl } from '../../constants';\nvar Form = styled('form', styles.form);\nvar Table = styled('div', styles.table);\nvar TableHeader = styled('div', styles.tableHeader);\nvar TableRow = styled('div', styles.tableRow);\nvar TableCell = styled('div', styles.tableCell);\nvar Field = styled('label', styles.field);\nvar Row = styled('div', styles.row);\n\nvar OrderForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(OrderForm, _PureComponent);\n\n  function OrderForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OrderForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OrderForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      order: [],\n      orderAddress: '',\n      pizzaTypes: [],\n      user: {\n        addresses: []\n      }\n    };\n\n    _this.handleSelectPizzaType = function (pizzaType) {\n      var order = _this.state.order;\n      var newItem = {\n        pizza_type_id: pizzaType.id,\n        quantity: 1\n      };\n      var updatedOrder = [].concat(_toConsumableArray(order), [newItem]);\n\n      _this.setState({\n        order: updatedOrder\n      });\n    };\n\n    _this.handleSelectAddress = function (address) {\n      _this.setState({\n        orderAddress: address\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OrderForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch(baseUrl + '/pizza_types', {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (pizzaTypes) {\n          console.log(pizzaTypes);\n\n          _this2.setState({\n            pizzaTypes: pizzaTypes\n          });\n        });\n        fetch(baseUrl + '/user', {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (user) {\n          console.log('TCL: OrderForm -> componentDidMount -> user', user);\n\n          _this2.setState({\n            user: user\n          });\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          pizzaTypes = _this$state.pizzaTypes,\n          order = _this$state.order,\n          orderAddress = _this$state.orderAddress,\n          user = _this$state.user;\n      var _this$props = this.props,\n          handlePlaceOrder = _this$props.handlePlaceOrder,\n          handleCancelOrder = _this$props.handleCancelOrder;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        Component: React.createElement(Button, {\n          color: themeColors.tertiaryColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Select Pizza Type\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, pizzaTypes.map(function (pt, i) {\n        return React.createElement(Dropdown.Item, {\n          key: i,\n          onClick: function onClick() {\n            return _this3.handleSelectPizzaType(pt);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            width: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, pt.name), React.createElement(\"span\", {\n          style: {\n            marginLeft: '2rem',\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"$\", pt.price));\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Pizza\"), React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Price\"), React.createElement(TableHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Quantity\")), order.map(function (orderItem, i) {\n        var pizzaType = pizzaTypes.find(function (pt) {\n          return pt.id === orderItem.pizza_type_id;\n        });\n        return React.createElement(TableRow, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, pizzaType.name), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"$\", pizzaType.price), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, orderItem.quantity));\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, orderAddress ? React.createElement(\"div\", {\n        style: {\n          border: \"1px solid \".concat(themeColors.primaryColor),\n          padding: '1rem',\n          color: textColors.textMuted\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, orderAddress.full_address) : null), ' ', React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        Component: React.createElement(Button, {\n          color: themeColors.secondaryColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Select Address\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, user.addresses.map(function (address, i) {\n        return React.createElement(Dropdown.Item, {\n          key: i,\n          onClick: function onClick() {\n            return _this3.handleSelectAddress(address);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, address.full_address);\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        color: themeColors.primaryColor,\n        onClick: handleCancelOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Cancel Order\"), React.createElement(Button, {\n        $as: Link,\n        to: '/',\n        onClick: function onClick() {\n          return handlePlaceOrder(order, orderAddress);\n        },\n        color: themeColors.primaryColor,\n        type: 'submit',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Submit Order\")));\n    }\n  }]);\n\n  return OrderForm;\n}(PureComponent);\n\nexport { OrderForm as default };","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/chronicle-pizza-frontend/src/components/OrderForm/index.js"],"names":["React","PureComponent","Link","themeColors","textColors","styles","styled","Button","Dropdown","baseUrl","Form","form","Table","table","TableHeader","tableHeader","TableRow","tableRow","TableCell","tableCell","Field","field","Row","row","OrderForm","state","order","orderAddress","pizzaTypes","user","addresses","handleSelectPizzaType","pizzaType","newItem","pizza_type_id","id","quantity","updatedOrder","setState","handleSelectAddress","address","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","console","log","catch","e","error","props","handlePlaceOrder","handleCancelOrder","justifyContent","tertiaryColor","map","pt","i","width","name","marginLeft","textAlign","price","orderItem","find","border","primaryColor","padding","color","textMuted","full_address","secondaryColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,IAAMC,IAAI,GAAGJ,MAAM,CAAC,MAAD,EAASD,MAAM,CAACM,IAAhB,CAAnB;AACA,IAAMC,KAAK,GAAGN,MAAM,CAAC,KAAD,EAAQD,MAAM,CAACQ,KAAf,CAApB;AACA,IAAMC,WAAW,GAAGR,MAAM,CAAC,KAAD,EAAQD,MAAM,CAACU,WAAf,CAA1B;AACA,IAAMC,QAAQ,GAAGV,MAAM,CAAC,KAAD,EAAQD,MAAM,CAACY,QAAf,CAAvB;AACA,IAAMC,SAAS,GAAGZ,MAAM,CAAC,KAAD,EAAQD,MAAM,CAACc,SAAf,CAAxB;AACA,IAAMC,KAAK,GAAGd,MAAM,CAAC,OAAD,EAAUD,MAAM,CAACgB,KAAjB,CAApB;AACA,IAAMC,GAAG,GAAGhB,MAAM,CAAC,KAAD,EAAQD,MAAM,CAACkB,GAAf,CAAlB;;IAEqBC,S;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAJA,K;;UAkCRC,qB,GAAwB,UAAAC,SAAS,EAAI;AAAA,UAC3BN,KAD2B,GACjB,MAAKD,KADY,CAC3BC,KAD2B;AAEnC,UAAMO,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAEF,SAAS,CAACG,EADX;AAEdC,QAAAA,QAAQ,EAAE;AAFI,OAAhB;AAKA,UAAMC,YAAY,gCAAOX,KAAP,IAAcO,OAAd,EAAlB;;AACA,YAAKK,QAAL,CAAc;AACZZ,QAAAA,KAAK,EAAEW;AADK,OAAd;AAGD,K;;UAEDE,mB,GAAsB,UAAAC,OAAO,EAAI;AAC/B,YAAKF,QAAL,CAAc;AAAEX,QAAAA,YAAY,EAAEa;AAAhB,OAAd;AACD,K;;;;;;;wCA1CmB;AAAA;;AAClB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,UAAIF,KAAJ,EAAW;AACTG,QAAAA,KAAK,CAACnC,OAAO,GAAG,cAAX,EAA2B;AAC9BoC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,mBAAYL,KAAZ;AADN;AADqB,SAA3B,CAAL,CAKGM,IALH,CAKQ,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SALX,EAMGF,IANH,CAMQ,UAAAnB,UAAU,EAAI;AAClBsB,UAAAA,OAAO,CAACC,GAAR,CAAYvB,UAAZ;;AACA,UAAA,MAAI,CAACU,QAAL,CAAc;AAAEV,YAAAA,UAAU,EAAVA;AAAF,WAAd;AACD,SATH;AAUAgB,QAAAA,KAAK,CAACnC,OAAO,GAAG,OAAX,EAAoB;AACvBoC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,mBAAYL,KAAZ;AADN;AADc,SAApB,CAAL,CAKGM,IALH,CAKQ,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SALX,EAMGF,IANH,CAMQ,UAAAlB,IAAI,EAAI;AACZqB,UAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DtB,IAA3D;;AACA,UAAA,MAAI,CAACS,QAAL,CAAc;AAAET,YAAAA,IAAI,EAAJA;AAAF,WAAd;AACD,SATH,EAUGuB,KAVH,CAUS,UAAAC,CAAC;AAAA,iBAAIH,OAAO,CAACI,KAAR,CAAcD,CAAd,CAAJ;AAAA,SAVV;AAWD;AACF;;;6BAkBQ;AAAA;;AAAA,wBAC2C,KAAK5B,KADhD;AAAA,UACCG,UADD,eACCA,UADD;AAAA,UACaF,KADb,eACaA,KADb;AAAA,UACoBC,YADpB,eACoBA,YADpB;AAAA,UACkCE,IADlC,eACkCA,IADlC;AAAA,wBAEyC,KAAK0B,KAF9C;AAAA,UAECC,gBAFD,eAECA,gBAFD;AAAA,UAEmBC,iBAFnB,eAEmBA,iBAFnB;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EACP,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEvD,WAAW,CAACwD,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG/B,UAAU,CAACgC,GAAX,CAAe,UAACC,EAAD,EAAKC,CAAL,EAAW;AACzB,eACE,oBAAC,QAAD,CAAU,IAAV;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC/B,qBAAL,CAA2B8B,EAA3B,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCF,EAAE,CAACG,IAAnC,CAJF,EAKE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACIL,EAAE,CAACM,KADP,CALF,CADF;AAWD,OAZA,CAPH,CADF,CADF,CADF,EA0BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,EAOGzC,KAAK,CAACkC,GAAN,CAAU,UAACQ,SAAD,EAAYN,CAAZ,EAAkB;AAC3B,YAAM9B,SAAS,GAAGJ,UAAU,CAACyC,IAAX,CAChB,UAAAR,EAAE;AAAA,iBAAIA,EAAE,CAAC1B,EAAH,KAAUiC,SAAS,CAAClC,aAAxB;AAAA,SADc,CAAlB;AAGA,eACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAE4B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY9B,SAAS,CAACgC,IAAtB,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAahC,SAAS,CAACmC,KAAvB,CAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYC,SAAS,CAAChC,QAAtB,CAHF,CADF;AAOD,OAXA,CAPH,CADF,CA1BF,EAgDE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEsB,UAAAA,cAAc,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG/B,YAAY,GACX;AACE,QAAA,KAAK,EAAE;AACL2C,UAAAA,MAAM,sBAAenE,WAAW,CAACoE,YAA3B,CADD;AAELC,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,KAAK,EAAErE,UAAU,CAACsE;AAHb,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG/C,YAAY,CAACgD,YAPhB,CADW,GAUT,IAXN,CAhDF,EA4DS,GA5DT,EA6DE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEjB,UAAAA,cAAc,EAAE;AAAlB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EACP,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEvD,WAAW,CAACyE,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG/C,IAAI,CAACC,SAAL,CAAe8B,GAAf,CAAmB,UAACpB,OAAD,EAAUsB,CAAV,EAAgB;AAClC,eACE,oBAAC,QAAD,CAAU,IAAV;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACvB,mBAAL,CAAyBC,OAAzB,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGA,OAAO,CAACmC,YAJX,CADF;AAQD,OATA,CALH,CADF,CA7DF,EA+EE,oBAAC,GAAD;AACE,QAAA,KAAK,EAAE;AACLjB,UAAAA,cAAc,EAAE;AADX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,IADX;AAEE,QAAA,KAAK,EAAEvD,WAAW,CAACoE,YAFrB;AAGE,QAAA,OAAO,EAAEd,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAaE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEvD,IADP;AAEE,QAAA,EAAE,EAAE,GAFN;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMsD,gBAAgB,CAAC9B,KAAD,EAAQC,YAAR,CAAtB;AAAA,SAHX;AAIE,QAAA,KAAK,EAAExB,WAAW,CAACoE,YAJrB;AAKE,QAAA,IAAI,EAAE,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF,CA/EF,CADF;AAyGD;;;;EA/JoCtE,a;;SAAlBuB,S","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport { themeColors, textColors } from '../../constants'\nimport styles from './styles'\nimport { styled } from 'styletron-react'\nimport Button from '../Button'\nimport Dropdown from '../Dropdown'\nimport { baseUrl } from '../../constants'\n\nconst Form = styled('form', styles.form)\nconst Table = styled('div', styles.table)\nconst TableHeader = styled('div', styles.tableHeader)\nconst TableRow = styled('div', styles.tableRow)\nconst TableCell = styled('div', styles.tableCell)\nconst Field = styled('label', styles.field)\nconst Row = styled('div', styles.row)\n\nexport default class OrderForm extends PureComponent {\n  state = {\n    order: [],\n    orderAddress: '',\n    pizzaTypes: [],\n    user: { addresses: [] }\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token')\n    if (token) {\n      fetch(baseUrl + '/pizza_types', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(pizzaTypes => {\n          console.log(pizzaTypes)\n          this.setState({ pizzaTypes })\n        })\n      fetch(baseUrl + '/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(user => {\n          console.log('TCL: OrderForm -> componentDidMount -> user', user)\n          this.setState({ user })\n        })\n        .catch(e => console.error(e))\n    }\n  }\n\n  handleSelectPizzaType = pizzaType => {\n    const { order } = this.state\n    const newItem = {\n      pizza_type_id: pizzaType.id,\n      quantity: 1\n    }\n\n    const updatedOrder = [...order, newItem]\n    this.setState({\n      order: updatedOrder\n    })\n  }\n\n  handleSelectAddress = address => {\n    this.setState({ orderAddress: address })\n  }\n  render() {\n    const { pizzaTypes, order, orderAddress, user } = this.state\n    const { handlePlaceOrder, handleCancelOrder } = this.props\n    return (\n      <Form>\n        <Row style={{ justifyContent: 'center' }}>\n          <Field>\n            <Dropdown\n              Component={\n                <Button color={themeColors.tertiaryColor}>\n                  Select Pizza Type\n                </Button>\n              }\n            >\n              {pizzaTypes.map((pt, i) => {\n                return (\n                  <Dropdown.Item\n                    key={i}\n                    onClick={() => this.handleSelectPizzaType(pt)}\n                  >\n                    <span style={{ width: '50%' }}>{pt.name}</span>\n                    <span style={{ marginLeft: '2rem', textAlign: 'right' }}>\n                      ${pt.price}\n                    </span>\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown>\n          </Field>\n        </Row>\n        <Row>\n          <Table>\n            <TableRow>\n              <TableHeader>Pizza</TableHeader>\n              <TableHeader>Price</TableHeader>\n              <TableHeader>Quantity</TableHeader>\n            </TableRow>\n\n            {order.map((orderItem, i) => {\n              const pizzaType = pizzaTypes.find(\n                pt => pt.id === orderItem.pizza_type_id\n              )\n              return (\n                <TableRow key={i}>\n                  <TableCell>{pizzaType.name}</TableCell>\n                  <TableCell>${pizzaType.price}</TableCell>\n                  <TableCell>{orderItem.quantity}</TableCell>\n                </TableRow>\n              )\n            })}\n          </Table>\n        </Row>\n        <Row style={{ justifyContent: 'center' }}>\n          {orderAddress ? (\n            <div\n              style={{\n                border: `1px solid ${themeColors.primaryColor}`,\n                padding: '1rem',\n                color: textColors.textMuted\n              }}\n            >\n              {orderAddress.full_address}\n            </div>\n          ) : null}\n        </Row>{' '}\n        <Row style={{ justifyContent: 'center' }}>\n          <Dropdown\n            Component={\n              <Button color={themeColors.secondaryColor}>Select Address</Button>\n            }\n          >\n            {user.addresses.map((address, i) => {\n              return (\n                <Dropdown.Item\n                  key={i}\n                  onClick={() => this.handleSelectAddress(address)}\n                >\n                  {address.full_address}\n                </Dropdown.Item>\n              )\n            })}\n          </Dropdown>\n        </Row>\n        <Row\n          style={{\n            justifyContent: 'space-between'\n          }}\n        >\n          <Button\n            outline={true}\n            color={themeColors.primaryColor}\n            onClick={handleCancelOrder}\n          >\n            Cancel Order\n          </Button>\n\n          <Button\n            $as={Link}\n            to={'/'}\n            onClick={() => handlePlaceOrder(order, orderAddress)}\n            color={themeColors.primaryColor}\n            type={'submit'}\n          >\n            Submit Order\n          </Button>\n        </Row>\n      </Form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
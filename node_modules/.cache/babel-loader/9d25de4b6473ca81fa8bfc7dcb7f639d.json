{"ast":null,"code":"import _classCallCheck from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/src/components/Spinner/index.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { getColor } from 'utils/color';\nimport { styled } from 'styletron-react';\nimport styles from './styles';\nvar SpinnerContainer = styled('div', styles.spinnerContainer);\nvar SpinnerSvg = styled('svg', styles.spinnerSvg);\n\nvar Spinner =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Spinner, _PureComponent);\n\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Spinner).apply(this, arguments));\n  }\n\n  _createClass(Spinner, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color;\n      var resolvedColor = getColor(color);\n      return React.createElement(SpinnerContainer, {\n        $size: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(SpinnerSvg, {\n        viewBox: \"0 0 32 32\",\n        $size: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"circle\", {\n        cx: \"16\",\n        cy: \"16\",\n        fill: \"none\",\n        r: \"14\",\n        strokeWidth: \"4\",\n        style: {\n          stroke: resolvedColor,\n          opacity: 0.2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"circle\", {\n        cx: \"16\",\n        cy: \"16\",\n        fill: \"none\",\n        r: \"14\",\n        strokeWidth: \"4\",\n        style: {\n          stroke: resolvedColor,\n          strokeDasharray: 80,\n          strokeDashoffset: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Spinner;\n}(PureComponent);\n\nSpinner.propTypes = {\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  color: PropTypes.string\n};\nSpinner.defaultProps = {\n  size: 'md',\n  color: 'textPrimary'\n};\nexport default Spinner;","map":{"version":3,"sources":["/Users/orenmagid/Development/PersonalProjects/ChroniclePizza/ChroniclePizzaFrontend/chronicle-pizza-frontend/src/components/Spinner/index.js"],"names":["React","PureComponent","PropTypes","getColor","styled","styles","SpinnerContainer","spinnerContainer","SpinnerSvg","spinnerSvg","Spinner","props","size","color","resolvedColor","stroke","opacity","strokeDasharray","strokeDashoffset","propTypes","oneOf","string","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,gBAAgB,GAAGF,MAAM,CAAC,KAAD,EAAQC,MAAM,CAACE,gBAAf,CAA/B;AACA,IAAMC,UAAU,GAAGJ,MAAM,CAAC,KAAD,EAAQC,MAAM,CAACI,UAAf,CAAzB;;IAEMC,O;;;;;;;;;;;;;6BAWK;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAEP,UAAMC,aAAa,GAAGX,QAAQ,CAACU,KAAD,CAA9B;AAEA,aACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAED,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAEA,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,IADL;AAEE,QAAA,EAAE,EAAC,IAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,CAAC,EAAC,IAJJ;AAKE,QAAA,WAAW,EAAC,GALd;AAME,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAED,aAAV;AAAyBE,UAAAA,OAAO,EAAE;AAAlC,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AACE,QAAA,EAAE,EAAC,IADL;AAEE,QAAA,EAAE,EAAC,IAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,CAAC,EAAC,IAJJ;AAKE,QAAA,WAAW,EAAC,GALd;AAME,QAAA,KAAK,EAAE;AACLD,UAAAA,MAAM,EAAED,aADH;AAELG,UAAAA,eAAe,EAAE,EAFZ;AAGLC,UAAAA,gBAAgB,EAAE;AAHb,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,CADF;AA0BD;;;;EAzCmBjB,a;;AAAhBS,O,CACGS,S,GAAY;AACjBP,EAAAA,IAAI,EAAEV,SAAS,CAACkB,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB,CADW;AAEjBP,EAAAA,KAAK,EAAEX,SAAS,CAACmB;AAFA,C;AADfX,O,CAMGY,Y,GAAe;AACpBV,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,KAAK,EAAE;AAFa,C;AAsCxB,eAAeH,OAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from 'utils/color'\nimport { styled } from 'styletron-react'\nimport styles from './styles'\n\nconst SpinnerContainer = styled('div', styles.spinnerContainer)\nconst SpinnerSvg = styled('svg', styles.spinnerSvg)\n\nclass Spinner extends PureComponent {\n  static propTypes = {\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\n    color: PropTypes.string\n  }\n\n  static defaultProps = {\n    size: 'md',\n    color: 'textPrimary'\n  }\n\n  render() {\n    const { size, color } = this.props\n    const resolvedColor = getColor(color)\n\n    return (\n      <SpinnerContainer $size={size}>\n        <SpinnerSvg viewBox=\"0 0 32 32\" $size={size}>\n          <circle\n            cx=\"16\"\n            cy=\"16\"\n            fill=\"none\"\n            r=\"14\"\n            strokeWidth=\"4\"\n            style={{ stroke: resolvedColor, opacity: 0.2 }}\n          />\n          <circle\n            cx=\"16\"\n            cy=\"16\"\n            fill=\"none\"\n            r=\"14\"\n            strokeWidth=\"4\"\n            style={{\n              stroke: resolvedColor,\n              strokeDasharray: 80,\n              strokeDashoffset: 60\n            }}\n          />\n        </SpinnerSvg>\n      </SpinnerContainer>\n    )\n  }\n}\n\nexport default Spinner\n"]},"metadata":{},"sourceType":"module"}